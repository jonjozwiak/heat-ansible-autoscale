heat_template_version: 2014-10-16
description: A central host to run ansible commands
parameters:
  image:
    type: string
    description: image used for servers

  key_name:
    type: string
    description: ssh key to connect to the servers

  ssh_user:
    type: string

  flavor:
    type: string
    description: flavor used by the server

  network:
    type: string
    description: private network used by the server

  ansible_public_key:
    type: string

  ansible_private_key:
    type: string

  ansible_hosts:
    type: string
    description: List of hosts passed from the auto-scaling group

resources:
  random_hostname_suffix:
    type: OS::Heat::RandomString
    properties:
      character_classes: [{"class": lowercase}, {"class": digits}]
      length: 8

  ansible_server:
    type: OS::Nova::Server
    properties:
      name: 
        str_replace:
          template: "ansible-host-SUFFIX"
          params:
            SUFFIX: {get_attr: [random_hostname_suffix, value]}
      admin_user: {get_param: ssh_user}
      flavor: {get_param: flavor}
      image: {get_param: image}
      key_name: {get_param: key_name}
      networks: [{network: {get_param: network} }]
      user_data: {get_resource: init}
      user_data_format: SOFTWARE_CONFIG

  init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: set_hostname}
      - config: {get_resource: get_ansible_files}
      - config: {get_resource: ssh_keys}
      - config: {get_resource: ansible_install}
      - config: {get_resource: setup_heat_tools}

  set_hostname:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        hostname: 
          str_replace:
            template: "ansible-host-SUFFIX"
            params:
              SUFFIX: {get_attr: [random_hostname_suffix, value]}
        manage-resolv-conf: true
        resolv_conf:
          nameservers: ['8.8.4.4', '8.8.8.8']
  
  setup_heat_tools:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        get_file: setup_heat_tools.sh

  # TODO: Change this to a git clone rather than manual write of files
  get_ansible_files:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        get_file: get_ansible_files.sh

  ssh_keys:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        write_files:
        - path: /root/.ssh/id_rsa
          permissions: 0600
          content: {get_param: ansible_private_key}
        - path: /root/.ssh/id_rsa.pub
          permissions: 0600
          content: {get_param: ansible_public_key}
        ssh_authorized_keys:
        - {get_param: ansible_public_key}

  ansible_install:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        get_file: ansible_install.sh

  ansible_inventory:
    type: OS::Heat::SoftwareConfig
    depends_on: ansible_install
    properties:
      group: script
      config:
        str_replace:
          params:
            $HOSTS: {get_param: ansible_hosts}
          template: {get_file: ansible-inventory.sh}

  deploy_ansible_inventory:
    type: OS::Heat::SoftwareDeployment
    properties:
      config:
        get_resource: ansible_inventory
      server:
        get_resource: ansible_server

